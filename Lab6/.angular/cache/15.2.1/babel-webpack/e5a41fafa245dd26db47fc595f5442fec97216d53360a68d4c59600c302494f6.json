{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../album.service\";\nfunction AlbumPhotosComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"img\", 2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const albumPhoto_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"src\", albumPhoto_r1.url, i0.ɵɵsanitizeUrl);\n  }\n}\nexport class AlbumPhotosComponent {\n  constructor(route, location, albumService) {\n    this.route = route;\n    this.location = location;\n    this.albumService = albumService;\n    this.loaded = true;\n  }\n  ngOnInit() {\n    this.getAlbum();\n    this.getPhotos();\n  }\n  getAlbum() {\n    this.route.paramMap.subscribe(params => {\n      const id = Number(params.get('id'));\n      this.loaded = false;\n      this.albumService.getAlbum(id).subscribe(albumas => {\n        this.albums = albumas;\n      });\n    });\n  }\n  getPhotos() {\n    this.route.paramMap.subscribe(params => {\n      const id = Number(params.get('id'));\n      this.loaded = false;\n      this.albumService.getAlbumPhotos(id).subscribe(photos => {\n        this.photos = photos;\n        this.loaded = true;\n      });\n    });\n  }\n  goBack() {\n    this.location.back();\n  }\n}\nAlbumPhotosComponent.ɵfac = function AlbumPhotosComponent_Factory(t) {\n  return new (t || AlbumPhotosComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Location), i0.ɵɵdirectiveInject(i3.AlbumService));\n};\nAlbumPhotosComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AlbumPhotosComponent,\n  selectors: [[\"app-album-photos\"]],\n  decls: 4,\n  vars: 2,\n  consts: [[3, \"routerLink\"], [4, \"ngFor\", \"ngForOf\"], [\"alt\", \"\", 3, \"src\"]],\n  template: function AlbumPhotosComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"button\")(1, \"a\", 0);\n      i0.ɵɵtext(2, \"Return back\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(3, AlbumPhotosComponent_div_3_Template, 2, 1, \"div\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵpropertyInterpolate1(\"routerLink\", \"/albums/\", ctx.album.id, \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.albumPhotos);\n    }\n  },\n  dependencies: [i2.NgForOf, i1.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAEAA,2BAA4C;IAAAA,yBAAqC;IAAAA,iBAAM;;;;IAAtCA,eAAwB;IAAxBA,oEAAwB;;;ACUzE,OAAM,MAAOC,oBAAoB;EAQ/BC,YAAoBC,KAAqB,EACrBC,QAAkB,EAClBC,YAA0B;IAF1B,UAAK,GAALF,KAAK;IACL,aAAQ,GAARC,QAAQ;IACR,iBAAY,GAAZC,YAAY;IAJhC,WAAM,GAAY,IAAI;EAKtB;EAEAC,QAAQ;IACN,IAAI,CAACC,QAAQ,EAAE;IACf,IAAI,CAACC,SAAS,EAAE;EAClB;EAEAD,QAAQ;IACN,IAAI,CAACJ,KAAK,CAACM,QAAQ,CAACC,SAAS,CAAEC,MAAM,IAAI;MACvC,MAAMC,EAAE,GAAGC,MAAM,CAACF,MAAM,CAACG,GAAG,CAAC,IAAI,CAAC,CAAC;MACnC,IAAI,CAACC,MAAM,GAAG,KAAK;MACnB,IAAI,CAACV,YAAY,CAACE,QAAQ,CAACK,EAAE,CAAC,CAACF,SAAS,CAAEM,OAAO,IAAI;QACnD,IAAI,CAACC,MAAM,GAAGD,OAAO;MACvB,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEAR,SAAS;IACP,IAAI,CAACL,KAAK,CAACM,QAAQ,CAACC,SAAS,CAAEC,MAAM,IAAI;MACvC,MAAMC,EAAE,GAAGC,MAAM,CAACF,MAAM,CAACG,GAAG,CAAC,IAAI,CAAC,CAAC;MACnC,IAAI,CAACC,MAAM,GAAG,KAAK;MACnB,IAAI,CAACV,YAAY,CAACa,cAAc,CAACN,EAAE,CAAC,CAACF,SAAS,CAAES,MAAM,IAAI;QACxD,IAAI,CAACA,MAAM,GAAGA,MAAM;QACpB,IAAI,CAACJ,MAAM,GAAG,IAAI;MACpB,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEAK,MAAM;IACJ,IAAI,CAAChB,QAAQ,CAACiB,IAAI,EAAE;EACtB;;AAzCWpB,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAqB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDZjC1B,8BAAQ;MAAqCA,2BAAW;MAAAA,iBAAI;MAE5DA,qEAAuF;;;MAF5EA,eAAiC;MAAjCA,qEAAiC;MAEhBA,eAAc;MAAdA,yCAAc","names":["i0","AlbumPhotosComponent","constructor","route","location","albumService","ngOnInit","getAlbum","getPhotos","paramMap","subscribe","params","id","Number","get","loaded","albumas","albums","getAlbumPhotos","photos","goBack","back","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/aruzhankaharmanova/Desktop/Web-Dev/Lab6/src/app/album-photos/album-photos.component.html","/Users/aruzhankaharmanova/Desktop/Web-Dev/Lab6/src/app/album-photos/album-photos.component.ts"],"sourcesContent":["<button><a routerLink=\"/albums/{{album.id}}\">Return back</a></button>\n\n<div *ngFor=\"let albumPhoto of albumPhotos\"><img src=\"{{albumPhoto.url}}\" alt=\"\"></div>\n<!-- \n<div class=\"content\">\n    <button (click)=\"goBack()\" class=\"back-button\">Go Back</button>\n    <div class=\"album-photos\">\n      <h2>Photos for album #{{albums.id}}</h2>\n  \n      <ul *ngIf=\"photos.length\" class=\"photos-list\">\n        <li *ngFor=\"let photo of photos\" class=\"photo-entry\">\n          <span>{{photo.id}}</span>\n          <span>{{photo.title}}</span>\n          <img src=\"{{photo.thumbnailUrl}}\" width=\"20px\">\n        </li>\n      </ul>\n    </div>\n    <p *ngIf=\"!loaded\">Loading album...</p>\n  </div> -->","import { Component, OnInit} from '@angular/core';\nimport { Album} from \"../models\";\nimport { AlbumPhotos} from \"../models\";\nimport { AlbumService } from '../album.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-album-photos',\n  templateUrl: './album-photos.component.html',\n  styleUrls: ['./album-photos.component.css']\n})\nexport class AlbumPhotosComponent {\n  // \"!\" non-null assertion operator - переменная никогда не будет \n  // null/undefined во время выполнения\n  \n  albums!: Album;\n  photos!: AlbumPhotos[];\n  loaded: boolean = true;\n\n  constructor(private route: ActivatedRoute,\n              private location: Location,\n              private albumService: AlbumService) {\n  }\n\n  ngOnInit(): void {\n    this.getAlbum();\n    this.getPhotos();\n  }\n\n  getAlbum() {\n    this.route.paramMap.subscribe((params) => {\n      const id = Number(params.get('id'));\n      this.loaded = false;\n      this.albumService.getAlbum(id).subscribe((albumas) => {\n        this.albums = albumas;\n      });\n    });\n  }\n\n  getPhotos() {\n    this.route.paramMap.subscribe((params) => {\n      const id = Number(params.get('id'));\n      this.loaded = false;\n      this.albumService.getAlbumPhotos(id).subscribe((photos) => {\n        this.photos = photos;\n        this.loaded = true;\n      });\n    });\n  }\n\n  goBack() {\n    this.location.back();\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}